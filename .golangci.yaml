issues:
  max-same-issues: 25

  # TODO: enable this when we have test coverage on docstring comments
#  # The list of ids of default excludes to include or disable.
#  include:
#    - EXC0002 # disable excluding of issues about comments from golint


linters:
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  # Disable all linters by default to have more control over which linters are enabled.
  # This helps in avoiding unexpected issues when golangci-lint updates and adds new linters.
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - depguard
    - dupl
    - errcheck
    - errorlint
    - exportloopref
    - forcetypeassert
    - funlen
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - tparallel
    - importas
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - nolintlint
    - revive
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
linters-settings:
  funlen:
    # Default: 60
    # Increased to 70 to allow for more complex functions without triggering the linter.
    lines: 70
    # If lower than 0, disable the check.
    # Default: 40
    # Overridden to 50 to allow for more complex functions.
    statements: 50
  # Setting uniq-by-line to false to ensure that all instances of the same issue are reported,
  # even if they occur on the same line. This helps in identifying all occurrences of an issue.
  uniq-by-line: false
  # A 10-minute timeout is chosen to allow enough time for the linters to run on larger codebases.
  timeout: 10m
run:
  timeout: 10m
  skip-dirs:
    - vendor
    - third_party
  skip-files:
    - ".*_test\\.go$"
  modules-download-mode: readonly
  allow-parallel-runners: true
  go: "1.23.6"
  skip-dirs-use-default: true

# do not enable...
#    - dogsled           # found to be to niche and ineffective
#    - goprintffuncname  # does not catch all cases and there are exceptions
#    - nakedret          # does not catch all cases and should not fail a build
#    - gochecknoglobals
#    - gochecknoinits    # this is too aggressive
#    - rowserrcheck disabled per generics https://github.com/golangci/golangci-lint/issues/2649
#    - godot
#    - godox
#    - goerr113
#    - goimports   # we're using gosimports now instead to account for extra whitespaces (see https://github.com/golang/go/issues/20818)
#    - golint      # deprecated
#    - gomnd       # this is too aggressive
#    - interfacer  # this is a good idea, but is no longer supported and is prone to false positives
#    - lll         # without a way to specify per-line exception cases, this is not usable
#    - maligned    # this is an excellent linter, but tricky to optimize and we are not sensitive to memory layout optimizations
#    - nestif
#    - prealloc    # following this rule isn't consistently a good idea, as it sometimes forces unnecessary allocations that result in less idiomatic code
#    - scopelint   # deprecated
#    - testpackage
#    - wsl         # this doesn't have an auto-fixer yet and is pretty noisy (https://github.com/bombsimon/wsl/issues/90)
#    - wrapcheck   # this is a good idea, but is no longer supported and is prone to false positives